---
title: "HLH diagnosis rate"
date: "2025-06-14"
format:
  html:
    code-fold: true
    toc: true
    toc-depth: 4
    toc-location: right
    css: setup/style.css
    include-after-body: setup/footer.html
    link-citations: true
editor: visual
---

*Contact:*<a href="mailto:j.goodall@sheffield.ac.uk?subject=Frequentist%20Step%20pneumoniae"> j.goodall\@sheffield.ac.uk</a>


```{r global-setup, include=FALSE}
if (!require("pacman", quietly = TRUE)) { install.packages("pacman") 
  library("pacman") }
pacman::p_load(ggplot2, tidyverse, lmtest, AER)
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message = FALSE)
options(scipen = 999, digits = 12)  # Turn off scientific notation

```

```{r ggplot global theme}
# Set global ggplot theme
theme_set(
  theme_minimal() +
    theme(
      panel.grid.major = element_blank(), # Remove the large grid lines
      panel.grid.minor = element_blank(), # Remove the small grid lines
      panel.background = element_blank(), # Remove the back ground
      axis.line = element_line(colour = "black") # Add a more solid axis line
    ))
```

# Emergency Admissions

This is the total ED attendances and emergency admissions for STH.

These were accessed and compiled from the monthly summaries provided by [NHS digital](https://www.england.nhs.uk/statistics/statistical-work-areas/ae-waiting-times-and-activity/).

You can see a clear dip during the height of the Covid-19 pandemic, along with a slight upward trend in both ED attendances and admissions.

These are used as the offset in the Poisson model

```{r STH-emergency-admissions-plot-setup}
STH_attendance <- read_csv("data/STH_attendance.csv", 
    col_types = cols(Total_Emergency_Admissions = col_number(), 
        Total_Attendances = col_number(), 
        Month = col_number(), Year = col_number(), 
        Date = col_date(format = "%d/%m/%Y")))

# Pivoting the data to long format
STH_attendance_long <- STH_attendance %>%
    mutate("Total Emergency Admissions" = Total_Emergency_Admissions,
         "Total ED Attendances" = Total_Attendances) %>%
  plotly::select(Date, "Total Emergency Admissions") %>%
  pivot_longer(cols = c("Total Emergency Admissions"),
               names_to = "name",
               values_to = "count")
```

```{r STH-emergency-admissions-plot, out.width="100%", fig.dim=c(10,4)}
STH_attendance_long %>%
ggplot(aes(x = Date, y = count, colour = name)) + 
  geom_segment(aes(x = Date, xend = Date, y = 0, yend = count), 
               color = "black", size = 0.8) +  # Vertical lines
  geom_point(size = 3) +  # Dots at the data points, color mapped to `name`
  labs(title = "Monthly STH Emergency Admissions",
       x = "Date",
       y = "Count",
       colour = "Category")
```

# Interrupted Time Series

This is an ITS analysis using a Poisson distribution. Overdispersion is calculated for each model (assumption of the Poisson distribution) and Durbin Watson test performed for auto-correlation (assumption of the ITS analysis).

Each model has three parameters estimates:

-   Time = the overall effect of time
-   Intervention = the immediate effect of the intervention (i.e. a step change)
-   Time from = the change in the slope pre/post (i.e. after the intervention does the rate change)

## Main

```{r}
# Add year quarters
STH_attendance_quarter <- STH_attendance %>%
  mutate(
    # Calculate the three-month interval
    quarter_year = case_when(
      Month %in% c(1, 2, 3) ~ paste0(Year, "-Q1"),
      Month %in% c(4, 5, 6) ~ paste0(Year, "-Q2"),
      Month %in% c(7, 8, 9) ~ paste0(Year, "-Q3"),
      Month %in% c(10, 11, 12) ~ paste0(Year, "-Q4")
    )
  ) %>%
  group_by(quarter_year) %>%
  summarise(emergency_admissions = sum(Total_Emergency_Admissions)) %>%
  ungroup()
```

```{r setup}
main_analysis <- read.csv("data/main_analysis.csv")

main_analysis <- STH_attendance_quarter %>%
  inner_join(main_analysis, join_by(quarter_year)) 
```

```{r main-model}
poisson_model_quarter_ITS <- glm(
  count ~ time + 
          intervention + 
          time_from +  
  offset(log(emergency_admissions)),
  family = poisson,
  data = main_analysis
)

summary(poisson_model_quarter_ITS)

dispersiontest(poisson_model_quarter_ITS)

dwtest(poisson_model_quarter_ITS)
```

# Sensitivity Analyses

## No resp virus

This is with other resp viruses excluded as well as COVID-19.

```{r noresp-setup}
# Import dataset
HLH_noresp <- read.csv(file = "data/HLH_noresp.csv")

# add in the emergency admissions
HLH_noresp <-  STH_attendance_quarter %>%
  full_join(HLH_noresp) 
```

```{r noresp-model}
poisson_model_quarter_ITS_noresp <- glm(
  count ~ time + 
          intervention + 
          time_from +  
  offset(log(emergency_admissions)),
  family = poisson,
  data = HLH_noresp
)

summary(poisson_model_quarter_ITS_noresp)

dispersiontest(poisson_model_quarter_ITS_noresp)

dwtest(poisson_model_quarter_ITS_noresp)
```

## Only coded

This is with only coded cases:

```{r coded-setup}
# Load data
HLH_coded <- read.csv("data/HLH_coded.csv")

# Add in attendance data
HLH_coded <-  STH_attendance_quarter %>%
  full_join(HLH_coded) 
```

```{r coded-model}
poisson_model_quarter_ITS_coded <- glm(
  count ~ time + 
          intervention + 
          time_from +  
  offset(log(emergency_admissions)),
  family = poisson,
  data = HLH_coded
)

summary(poisson_model_quarter_ITS_coded)

dispersiontest(poisson_model_quarter_ITS_coded)

dwtest(poisson_model_quarter_ITS_coded)
```

# Visualisation

```{r diagramme-setup}
main_analysis <- main_analysis %>%
  mutate(intervention_2 = case_when(intervention == 0 ~ "Pre",
                                    intervention == 1 ~ "Post"))

# Get predictions with standard errors
preds <- predict(poisson_model_quarter_ITS, newdata = main_analysis, type = "link", se.fit = TRUE)

# Convert standard errors to confidence intervals on response scale
main_analysis$poisson_pred <- exp(preds$fit)  # Predicted mean
main_analysis$poisson_pred_lower <- exp(preds$fit - 1.96 * preds$se.fit)  # Lower 95% CI
main_analysis$poisson_pred_upper <- exp(preds$fit + 1.96 * preds$se.fit)  # Upper 95% CI

# Generate counterfactual (predictions assuming no intervention)
main_analysis_no_intervention <- main_analysis
main_analysis_no_intervention$intervention <- 0  # Set intervention to 0 for counterfactual
preds_no_intervention <- predict(poisson_model_quarter_ITS, 
                                 newdata = main_analysis_no_intervention, 
                                 type = "link", se.fit = TRUE)

main_analysis$poisson_pred_no_intervention <- exp(preds_no_intervention$fit)
```

```{r diagramme-output, fig.width=9, fig.height=4}
# Plot
ggplot(main_analysis, aes(x = quarter_year, y = count)) +
  geom_line(aes(y = poisson_pred_no_intervention, group = 1), 
            linetype = "dashed", size = 1, 
            color = "orange") +    # Counterfactual trend 
  geom_point(aes(colour = intervention_2)) +  # Observed data points, colored by intervention status
  geom_line(aes(y = poisson_pred, group = intervention_2, color = intervention_2), 
            size = 1) +  # Poisson model fit
  geom_ribbon(aes(ymin = poisson_pred_lower, 
                  ymax = poisson_pred_upper, 
                  group = intervention_2,
                  fill = intervention_2), 
              alpha = 0.2) +  # 95% Confidence interval
  geom_vline(xintercept = "2022-Q1", # mark the intervention
             linetype = "dashed", color = "black") +  
  labs(x = "Quarter Year",
       y = "Count of Diagnosed HLH Cases") + 
  scale_fill_manual(values = c("cadetblue", "orange")) +
  scale_colour_manual(values = c("cadetblue", "orange")) +
    scale_y_continuous(breaks = scales::breaks_pretty(n = 5), labels = scales::label_number(accuracy = 1)) + 
  theme(axis.text.x = element_text(angle = 45,  hjust = 1),
        axis.ticks = element_line(linewidth = 0.5),
        legend.position = "none",
        panel.grid.major.x = element_blank(),        
        panel.grid.major.y = element_line(size = 0.2, linetype = 'solid', colour = "grey"))
```

## How many cases missed without autoalert?

```{r}
# Sum of all the cases diagnosed after the intervention 
acutally_diagnosed <- sum(main_analysis$count[main_analysis$intervention_2 == "Post"])

# Sum of those predicted to be diagnosed with no intervention
predicted_diagnosed <- sum(main_analysis$poisson_pred_no_intervention[main_analysis$intervention_2 == "Post"]) 

# Actual diagnosed minus predicted diagnosed. Adjusted for 12 months (21 months observed)
(acutally_diagnosed - predicted_diagnosed) / 21 * 12

```

## Was there a drop in HLH cases during COVID?

```{r}
print("Median cases before the intervention:")
median(main_analysis$count[main_analysis$intervention == 0])

print("Median cases during 2020:")
median(main_analysis$count[grepl("2020", main_analysis$quarter_year)])

print("Mean cases before the intervention:")
mean(main_analysis$count[main_analysis$intervention == 0])

print("Mean cases during 2020:")
mean(main_analysis$count[grepl("2020", main_analysis$quarter_year)])
```
